WHAT's NEXT

implement no check to see if it works real-time
	done, it does work quick enough but need to iron out kinks make it resistant to wrong decisions :/
	combination of lowering threshold and knowing that score shouldnt change so much between frames
get messup check to work too
start working on discretizing the play-area

==========================

big-picture idea

train on ds version, play on wii(u)

---------training---------
	cv - use scfh + opencv to read from desmume
	input - can step through emulation frame by frame
	output - win32api to send keystrokes.. look into fake joypad

q-learning
	see: https://github.com/chncyhn/flappybird-qlearning-bot
	and https://github.com/SarvagyaVaish/FlappyBirdRL

discretize gameplay space by incoming drums
read score / recognize mess up graphic as reinforcement
>>> will prob do first
	either do diff to find closest match to char (as in http://arnab.org/blog/so-i-suck-24-automating-card-games-using-opencv-and-python)

	- remember that extracted nos have green where should be ignored :_)
		- or - 
	train a Knearest model (as in https://github.com/hasegaw/IkaLog/blob/master/ikalog/utils/character_recoginizer/character.py
							and https://github.com/hasegaw/IkaLog/blob/master/ikalog/utils/character_recoginizer/number.py)

	numbers r 12x16 pixels each
	see masks folder


compare to a hand-coded recognition -> action bot as baseline?
	
----------testing----------
	cv - hdmi capture card + opencv
	output - communicate via serial to arduino as a fake classic controller (see wiibrew for pinout)

may have to move around inputs to look at different parts/ work with frameskips
hookup outputs idno
